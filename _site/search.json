[
  {
    "objectID": "gen_score.html",
    "href": "gen_score.html",
    "title": "gen_score()",
    "section": "",
    "text": "gen_score(\n    text\n)\n\n\ntext: A string object to be analyzed.\n\n\n\n\nlibrary(genCountR)\n\ntext &lt;- 'This person was a heroine due to their fighting during the war.'\n\nresult_df &lt;- genCountR::gen_score(text)"
  },
  {
    "objectID": "gen_score.html#examples",
    "href": "gen_score.html#examples",
    "title": "gen_score()",
    "section": "",
    "text": "library(genCountR)\n\ntext &lt;- 'This person was a heroine due to their fighting during the war.'\n\nresult_df &lt;- genCountR::gen_score(text)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "genCounter",
    "section": "",
    "text": "If you are wanting to use the Gendered Language Dictionary developed by Roberts and Utych (2019), there are two main ways that you can do so:\nBoth of these are built as side projects as I have time and I can not guarantee perfect accuracy with either of these tools. So, be sure to use them at your own risk. The R Package interface is much more transparent with the results for the tool, so that one is recommended more highly than the Webapp."
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "genCounter",
    "section": "Installation",
    "text": "Installation\nThe package is currently under review with CRAN. However, you are welcome to download the most recent version of the package from Github:\n```{r}\ndevtools::install_github(\"DamonCharlesRoberts/genCountR\")\n```\nOr if you are using RENV\n```{r}\nrenv::install(\"DamonCharlesRoberts/genCountR\")\n```"
  },
  {
    "objectID": "index.html#count-number-of-matches-to-dictionary-with-their-score-and-label",
    "href": "index.html#count-number-of-matches-to-dictionary-with-their-score-and-label",
    "title": "genCounter",
    "section": "Count number of matches to dictionary with their score and label",
    "text": "Count number of matches to dictionary with their score and label\nTo count the number of occurrences in your document that also appear in the dictionary, you can use the genCountR::gen_count() function. It will not only count the number of words that match those in the dictionary, but it will also return the score and whether the word was classified according to Roberts and Utych (2019)1\n\n# Load the package\nlibrary(genCountR)\n\n# Pass a string to be analyzed\nstr &lt;- \"This person was a hero. They were a prisoner of war and I, as President, got them out.\"\n\n# Use the gen_count() function on the str\ngen_count(str)\n\n      word count    score classified\n1     hero     1 5.615385  Masculine\n2 prisoner     1 5.272727    Neutral"
  },
  {
    "objectID": "index.html#return-the-overall-score-of-the-passed-string",
    "href": "index.html#return-the-overall-score-of-the-passed-string",
    "title": "genCounter",
    "section": "Return the overall score of the passed string",
    "text": "Return the overall score of the passed string\nTo find an overall score of the “genderedness” of some text, you can use the genCountR::gen_score() function. This function takes the count of words that match with those in the dictionary, sum up the scores of all of those matched occurrences and then calculates the average “document” score by dividing by the number of words passed in the string (“document”).\nIt also returns more information than the average score. It will return a list object including the average score (avg_score), but also the total score total_score for the document before normalized based on the length of text, but also the data.frame (df) that reports which words were matched, how often they occurred, the score, and the total score provided by each word.\n\n# Load the package\nlibrary(genCountR)\n\n# Pass a string to be analyzed\nstr &lt;- \"This person was a hero. They were a prisoner of war and I, as President, got them out.\"\n\n# Use the gen_count() function on the str\ngen_score(str)\n\n$avg_score\n[1] 0.6048951\n\n$total_score\n[1] 10.88811\n\n$df\n      word count   mean.a total_score\n1     hero     1 5.615385    5.615385\n2 prisoner     1 5.272727    5.272727"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "genCounter",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWords that have a score below 2.5 are Feminine, words with a score between 2.5 and 5.5 are Neutral, and words with a score above 5.5 are Masculine.↩︎"
  },
  {
    "objectID": "functions.html",
    "href": "functions.html",
    "title": "Functions",
    "section": "",
    "text": "Functions\n\ngen_count(): A function to count the number of matched words with the dictionary, the dictionary’s score for the word, and the classification of the word being masculine or feminine according to Roberts and Utych (2019).\ngen_score(): A function to provide a average score for a document. It finds words that matches to that of the dictionary, counts the number of occurrences of those matches, creates a total document score by summing the score times the number of occurrences of each matched word and then divides by the number of words in the passed string. The function returns a list object reporting this avg_score, the total_score, and df – a data.frame that shows which words were matched, how many times they occurred, and the scores for the words."
  },
  {
    "objectID": "gen_count.html",
    "href": "gen_count.html",
    "title": "gen_count()",
    "section": "",
    "text": "gen_count(\n    text\n)\n\n\ntext: A string object to be analyzed.\n\n\n\n\nlibrary(genCountR)\n\ntext &lt;- 'This person was a heroine due to their fighting during the war.'\nresult_df &lt;- genCountR::gen_count(text)"
  },
  {
    "objectID": "gen_count.html#examples",
    "href": "gen_count.html#examples",
    "title": "gen_count()",
    "section": "",
    "text": "library(genCountR)\n\ntext &lt;- 'This person was a heroine due to their fighting during the war.'\nresult_df &lt;- genCountR::gen_count(text)"
  }
]